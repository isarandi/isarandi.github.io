__and__
=======

.. py:method:: rlemasklib.oop.RLEMask.__and__(other)

   Compute the intersection of two RLE masks.

   :param other: another RLE mask

   :returns: A new RLEMask object representing the intersection of the two masks.

   .. rubric:: Examples

   >>> rle1 = RLEMask(np.eye(3))
   >>> rle2 = RLEMask(np.eye(3)[::-1])
   >>> np.array(rle1 & rle2)
   array([[0, 0, 0],
          [0, 1, 0],
          [0, 0, 0]], dtype=uint8)


.. footbibliography::