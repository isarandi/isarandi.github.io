:html_theme.sidebar_secondary.remove: true

BoolFunc
========

.. toctree::
   :hidden:

   /api/rlemasklib/BoolFunc.A
   /api/rlemasklib/BoolFunc.B
   /api/rlemasklib/BoolFunc.DIFFERENCE
   /api/rlemasklib/BoolFunc.SYMMETRIC_DIFFERENCE
   /api/rlemasklib/BoolFunc.XOR
   /api/rlemasklib/BoolFunc.EQUIVALENCE
   /api/rlemasklib/BoolFunc.XNOR
   /api/rlemasklib/BoolFunc.IMPLICATION
   /api/rlemasklib/BoolFunc.NOR
   /api/rlemasklib/BoolFunc.NAND

.. py:class:: rlemasklib.BoolFunc

   Bases: :py:obj:`enum.IntEnum`


   Binary Boolean functions for merging masks.

   Any Boolean function can be expressed by combining :attr:`BoolFunc.A` and :attr:`BoolFunc.B`
   using bitwise operators. Several named functions are provided for convenience.

   .. rubric:: Examples

   >>> from rlemasklib import RLEMask, BoolFunc
   >>> m1 = RLEMask.from_array(np.eye(3))
   >>> m2 = RLEMask.from_array(np.eye(3)[::-1])
   >>> m3 = m1.merge(m2, ~BoolFunc.A & BoolFunc.B)
   >>> m3.to_array()
   array([[0, 0, 1],
          [0, 0, 0],
          [1, 0, 0]], dtype=uint8)

   >>> from rlemasklib import encode, merge, decode, BoolFunc
   >>> d1 = encode(np.eye(3))
   >>> d2 = encode(np.eye(3)[::-1])
   >>> d3 = merge([d1, d2], ~BoolFunc.A & BoolFunc.B)
   >>> decode(d3)
   array([[0, 0, 1],
          [0, 0, 0],
          [1, 0, 0]], dtype=uint8)

Attributes
----------

.. autoapisummary::

   rlemasklib.BoolFunc.A
   rlemasklib.BoolFunc.B
   rlemasklib.BoolFunc.DIFFERENCE
   rlemasklib.BoolFunc.SYMMETRIC_DIFFERENCE
   rlemasklib.BoolFunc.XOR
   rlemasklib.BoolFunc.EQUIVALENCE
   rlemasklib.BoolFunc.XNOR
   rlemasklib.BoolFunc.IMPLICATION
   rlemasklib.BoolFunc.NOR
   rlemasklib.BoolFunc.NAND






.. footbibliography::